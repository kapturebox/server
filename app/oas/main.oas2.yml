---
  swagger: "2.0"
  info: 
    version: "1.0"
    title: "Kapture API"
    description: "This is the API spec for kapture to perform all the functions that are needed to \"curate your media\"."
    contact: 
      name: "Evin Callahan"
      url: "http://kapturebox.com"
    license: 
      name: ""
  host: "api.kapturebox.com"
  schemes: 
    - "http"
  consumes: 
    - "application/json"
  produces: 
    - "application/json"
  securityDefinitions: {}
  paths: 
    /search: 
      get: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        description: "Searches all 'sources' to return results that match the "
        operationId: "search"
        parameters: 
          - 
            in: "query"
            name: "q"
            type: "string"
            description: "String to query sources for"
            required: true
          - 
            $ref: "#/parameters/filterQueryString"
        summary: "Search all available sources"
        tags: 
          - "Searching"
    /downloads: 
      get: 
        responses: 
          200: 
            description: "Successfully got download results"
            schema: {}
        summary: "Get all downloads, active and inactive"
        operationId: "getalldownloads"
        parameters: 
          - 
            $ref: "#/parameters/filterQueryString"
        tags: 
          - "Downloading"
    /series/{sourceId}/{entryId}: 
      post: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        parameters: 
          - 
            in: "path"
            name: "sourceId"
            type: "string"
            required: true
            description: "ID of source plugin to request entryId from"
          - 
            in: "path"
            name: "entryId"
            type: "string"
            required: true
            description: "ID of series in question that you want added to autokapture"
        summary: "Start a new series to be autokaptured"
        operationId: "enableseries"
        tags: 
          - "Series"
      parameters: 
        - 
          name: "sourceId"
          in: "path"
          type: "string"
          required: true
        - 
          name: "entryId"
          in: "path"
          type: "string"
          required: true
      delete: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Delete a series from being autokaptured"
        parameters: 
          - 
            in: "path"
            name: "sourceId"
            type: "string"
            required: true
          - 
            in: "path"
            name: "entryId"
            type: "string"
            required: true
        operationId: "deleteseries"
        tags: 
          - "Series"
    /series: 
      get: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Get all currently configured autokapture series"
        operationId: "getallseries"
        tags: 
          - "Series"
    /settings: 
      get: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Get all current settings"
        operationId: "getallsettings"
        tags: 
          - "Settings"
      put: 
        responses: 
          202: 
            description: "Updated successfully"
            schema: 
              type: "object"
              properties: {}
        summary: "Change ALL settings via body object"
        description: "This will allow you to change all of the settings in the system at once.. if parts of the object are missing they will be nullified.  If you don't want this behavior, use the `PATCH` method."
        operationId: "putallsettings"
        tags: 
          - "Settings"
        parameters: 
          - 
            in: "body"
            name: "body"
            schema: 
              $ref: "#/definitions/settingsModel"
            description: "Settings to change"
            x-examples: 
              application/json: 
                downloadPaths: 
                  root: "consectetur tempor qui"
                  default: "irure cillum"
                  movies: "dolor sed enim"
                  music: "cillum dolor "
                  photos: "ut Lorem sunt mini"
                  shows: "enim Lorem ad"
                plugins: 
                  com_flexget: 
                    api_token: null
                    enabled: false
                    flexgetCheckFrequency: 52589380
                    flexget_host: "consectetur officia et Lorem"
                    flexget_pass: "nostrud ut est consectetur"
                    flexget_port: 41810233
                    flexget_user: "cillu"
                  com_kapture_url: 
                    enabled: true
                  com_piratebay: 
                    enabled: true
                  com_transmissionbt: 
                    enabled: false
                    transmission_host: "deserunt"
                    transmission_pass: "dolore commodo nulla sunt anim"
                    transmission_port: 56023170
                    transmission_user: "dolor sunt"
                  com_youtube: 
                    enabled: false
                  info_showrss: 
                    enabled: true
                system: 
                  name: "laboris fugiat"
                userInfo: 
                  email: null
      patch: 
        responses: 
          202: 
            description: "Successfully changed settings"
            schema: 
              type: "object"
              properties: {}
        summary: "Update only the settings presented in body"
        description: "This will update only the supplied settings"
        operationId: "patchsettings"
        tags: 
          - "Settings"
        parameters: 
          - 
            in: "body"
            name: "body"
            schema: 
              $ref: "#/definitions/settingsModel"
            description: "All of these options are optional, only supply the ones that need to be updated"
            x-examples: {}
    /settings/{key}: 
      get: 
        responses: 
          200: 
            description: "Value of requested setting"
            schema: 
              type: "object"
              required: 
                - "value"
              properties: 
                value: 
                  type: "string"
          404: 
            description: "Setting not found"
        summary: "Get a setting"
        operationId: "getsetting"
        tags: 
          - "Settings"
      parameters: 
        - 
          name: "key"
          in: "path"
          type: "string"
          required: true
          description: "Key of setting you would like to change (nested keys are separated by .)"
    /downloads/source:{sourceId}/{slug}: 
      post: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Start download based on source configuration of entryId"
        description: "Allows `sourceId` plugin to determine how to download the given `slug` selection based on the source configuration"
        operationId: "startdownloadfromsource"
        tags: 
          - "Downloading"
      parameters: 
        - 
          name: "sourceId"
          in: "path"
          type: "string"
          required: true
        - 
          name: "slug"
          in: "path"
          type: "string"
          required: true
    /downloads/method:{methodId}/{slug}: 
      get: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Start download based on download method"
        description: "Starts a new download based on `methodId` download provider of `slug` entry"
        operationId: "startdownloadfrommethod"
        tags: 
          - "Downloading"
      parameters: 
        - 
          name: "methodId"
          in: "path"
          type: "string"
          required: true
          description: "Downloader method to use"
          enum: 
            - "torrent"
            - "youtube"
            - "url"
            - "flexget"
        - 
          name: "slug"
          in: "path"
          type: "string"
          required: true
          description: "Some string based on what download provider can provide"
    /trending: 
      get: 
        responses: 
          200: 
            $ref: "#/responses/trendingMediaResponse"
        summary: "Get currently trending media"
        parameters: 
          - 
            $ref: "#/parameters/filterQueryString"
        operationId: "gettrending"
        tags: 
          - "Trending"
    /downloads/{id}: 
      delete: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Stops the given download ID"
        operationId: "stopdownload"
        tags: 
          - "Downloading"
      parameters: 
        - 
          name: "id"
          in: "path"
          type: "string"
          required: true
      get: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Gets the given download ID"
        operationId: "getdownload"
        tags: 
          - "Downloading"
    /uploads: 
      get: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Get a list of all of the uploads that have been performed"
        operationId: "getuploads"
        tags: 
          - "Uploading"
      post: 
        responses: 
          200: 
            description: ""
            schema: 
              type: "object"
              properties: {}
        summary: "Uploads a new file"
        parameters: 
          - 
            in: "formData"
            name: "file"
            type: "file"
            required: true
            description: "Binary upload data"
          - 
            in: "formData"
            name: "type"
            type: "string"
            description: "Type of the media being uploaded"
            enum: 
              - "movie"
              - "tvshow"
              - "music"
              - "other"
              - "photo"
              - "auto"
            required: true
        operationId: "newupload"
        tags: 
          - "Uploading"
  definitions: 
    downloadEntry: 
      type: "object"
      properties: 
        mediaType: 
          type: "string"
          enum: 
            - "tvshow"
            - "other"
            - "movie"
            - "music"
            - "photo"
        sourceId: 
          type: "string"
        size: 
          type: "integer"
        startDate: 
          type: "string"
          format: "date-time"
        title: 
          type: "string"
        downloadMechanism: 
          type: "string"
        hashString: 
          type: "string"
        percentDone: 
          type: "integer"
        rateDownload: 
          type: "integer"
        eta: 
          type: "integer"
        isFinished: 
          type: "boolean"
        isStalled: 
          type: "boolean"
        sourceData: 
          type: "object"
      required: 
        - "hashString"
        - "percentDone"
        - "eta"
        - "isFinished"
        - "isStalled"
      description: "A typical download entry will look something like this"
    searchResultEntry: 
      type: "object"
      description: "A single entry for what you'll normally get back from the search results endpoint"
      title: "searchResultEntry"
      properties: 
        sourceId: 
          type: "string"
        sourceName: 
          type: "string"
        score: 
          type: "number"
        downloadMechanism: 
          type: "string"
        flexgetModel: 
          type: "string"
        mediaType: 
          type: "string"
        id: 
          type: "string"
        category: 
          type: "string"
        size: 
          type: "string"
        title: 
          type: "string"
      required: 
        - "sourceId"
        - "downloadMechanism"
        - "id"
        - "title"
    seriesEntry: 
      type: "object"
      properties: 
        sourceId: 
          type: "string"
        sourceName: 
          type: "string"
        flexgetModel: 
          type: "string"
        mediaType: 
          type: "string"
        id: 
          type: "string"
        category: 
          type: "string"
        size: 
          type: "string"
        title: 
          type: "string"
      required: 
        - "sourceId"
        - "mediaType"
        - "id"
        - "title"
      description: "A (usually) tvshow series entry provided by a plugin"
    trendingMediaEntry: 
      type: "object"
      properties: 
        type: 
          type: "string"
        title: 
          type: "string"
        additionalInfoUrl: 
          type: "string"
        sourceId: 
          type: "string"
      description: "How a trending-media object is presented"
    settingsModel: 
      type: "object"
      description: "Represents the settings of the currently running kapture system"
      properties: 
        downloadPaths: 
          type: "object"
          properties: 
            default: 
              type: "string"
            movies: 
              type: "string"
            music: 
              type: "string"
            photos: 
              type: "string"
            root: 
              type: "string"
            shows: 
              type: "string"
        plugins: 
          type: "object"
          properties: 
            com_flexget: 
              type: "object"
              properties: 
                api_token: 
                  type: "null"
                enabled: 
                  type: "boolean"
                flexgetCheckFrequency: 
                  type: "integer"
                flexget_host: 
                  type: "string"
                flexget_pass: 
                  type: "string"
                flexget_port: 
                  type: "integer"
                flexget_user: 
                  type: "string"
            com_kapture_url: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
            com_piratebay: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
            com_transmissionbt: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                transmission_host: 
                  type: "string"
                transmission_pass: 
                  type: "string"
                transmission_port: 
                  type: "integer"
                transmission_user: 
                  type: "string"
            com_youtube: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
            info_showrss: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
        system: 
          type: "object"
          properties: 
            name: 
              type: "string"
        userInfo: 
          type: "object"
          properties: 
            email: 
              type: 
                - "null"
                - "string"
  basePath: "/api/v1"
  responses: 
    downloadResponse: 
      description: "Typical response from a call to /downloads"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/downloadEntry"
      examples: 
        application/json: 
          - 
            hashString: "nisi"
            percentDone: -92746936
            eta: 85060245
            isFinished: false
            isStalled: true
            mediaType: "photo"
            sourceId: "cillum laboris labo"
            size: 76965655
            startDate: "1949-09-06T11:27:55.902Z"
            title: "Duis lab"
            downloadMechanism: "laboris ex consequat reprehenderit"
            rateDownload: 38597331
            sourceData: {}
          - 
            hashString: "enim dolor"
            percentDone: -30360695
            eta: 88104805
            isFinished: true
            isStalled: false
            mediaType: "photo"
            sourceId: "Lorem amet ut"
            size: 2952358
            startDate: "2016-10-17T08:15:18.136Z"
            title: "incididunt id ea"
            downloadMechanism: "aute"
            rateDownload: -34736926
            sourceData: {}
          - 
            hashString: "ipsum elit quis amet"
            percentDone: 76582371
            eta: 30156531
            isFinished: false
            isStalled: true
            mediaType: "photo"
            sourceId: "voluptate incididunt pariatur ad"
            size: 68510321
            startDate: "1941-02-08T21:40:19.552Z"
            title: "Ut culpa do"
            downloadMechanism: "elit Excepteur dolo"
            rateDownload: 52744531
            sourceData: {}
    searchResponse: 
      description: ""
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/searchResultEntry"
      examples: 
        application/json: 
          - 
            sourceId: "cillum aliqua"
            downloadMechanism: "sed anim reprehenderit"
            id: "Ut nostrud consequat dolore"
            title: "nostrud pariatur dolor et"
            sourceName: "ut ea ullamco sed labore"
            score: 98500140.3094976
            flexgetModel: "exercitation proident"
            mediaType: "ea consectetur aute deserunt"
            category: "nostrud enim adipisicing culpa"
            size: "sed id"
          - 
            sourceId: "ad Lorem proident dolor"
            downloadMechanism: "anim sunt officia amet Duis"
            id: "pariatur proident minim"
            title: "ipsum ea Lorem et"
            sourceName: "pariatur irure id sit"
            score: 44001117.74601233
            flexgetModel: "nisi enim consequat Ut"
            mediaType: "in ex"
            category: "elit cupidatat"
            size: "voluptate anim irure"
          - 
            sourceId: "culpa id"
            downloadMechanism: "dolor magna"
            id: "dolore"
            title: "non"
            sourceName: "voluptate velit"
            score: 41821842.43931264
            flexgetModel: "magna nulla"
            mediaType: "reprehenderit anim"
            category: "in commod"
            size: "in voluptate"
    seriesEntriesResponse: 
      description: ""
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/seriesEntry"
      examples: 
        application/json: 
          - 
            sourceId: "dolore deserunt aute aliquip"
            mediaType: "aliqua cillum veniam"
            id: "et ullamco"
            title: "anim ad"
            sourceName: "Duis eu occaecat"
            flexgetModel: "commodo eu do"
            category: "qui dolor eu fugiat"
            size: "amet dolor et tempor nisi"
          - 
            sourceId: "culpa Ut Duis irure"
            mediaType: "irure Lorem"
            id: "aliqua aliquip sit ea"
            title: "mollit"
            sourceName: "lab"
            flexgetModel: "incididunt deserunt cupidatat"
            category: "esse pariatur dolor"
            size: "pariatur minim"
          - 
            sourceId: "reprehenderit elit adipisicing sint"
            mediaType: "quis commod"
            id: "incididunt ut"
            title: "veniam sint ut sunt"
            sourceName: "ex fugiat"
            flexgetModel: "elit"
            category: "est ad"
            size: "dolor Lorem mollit"
    trendingMediaResponse: 
      description: ""
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/trendingMediaEntry"
      examples: 
        application/json: 
          - 
            type: "incididunt laborum quis occaecat eiusmod"
            title: "ea qui sit"
            additionalInfoUrl: "dolore ad"
            sourceId: "fugia"
          - 
            type: "magna anim occaecat qui"
            title: "commodo deserunt ullamco minim"
            additionalInfoUrl: "ad Ut"
            sourceId: "voluptate incididunt exercitation dolore"
  parameters: 
    filterQueryString: 
      name: "filter"
      in: "query"
      type: "string"
      description: "This field allows for users to filter on specific fields that come back in objects from search results.  The format is simply: `key1:value;key2:value2`."
      pattern: "((?:\\w+:\\w+));?"
  tags: 
    - 
      name: "Searching"
    - 
      name: "Downloading"
    - 
      name: "Uploading"
    - 
      name: "Trending"
    - 
      name: "Series"
    - 
      name: "Settings"

